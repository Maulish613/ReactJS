[{"D:\\Project\\untitled\\src\\index.js":"1","D:\\Project\\untitled\\src\\reportWebVitals.js":"2","D:\\Project\\untitled\\src\\App.js":"3","D:\\Project\\untitled\\src\\components\\Form.js":"4","D:\\Project\\untitled\\src\\components\\TodoList.js":"5","D:\\Project\\untitled\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":646,"mtime":1612482692501,"results":"10","hashOfConfig":"8"},{"size":1262,"mtime":1612482806754,"results":"11","hashOfConfig":"8"},{"size":409,"mtime":1612479774594,"results":"12","hashOfConfig":"8"},{"size":1006,"mtime":1612481374374,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gjj7mn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"D:\\Project\\untitled\\src\\index.js",[],["29","30"],"D:\\Project\\untitled\\src\\reportWebVitals.js",[],"D:\\Project\\untitled\\src\\App.js",["31","32"],"import  React, {useState} from \"react\";\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from \"./components/TodoList\";\nimport Todo from './components/Todo'\nfunction App() {\n    const [inputText, setInputText] = useState(\"\");\n    const [todos, setTodos] = useState([]);\n    const [status,setStatus] = useState('all');\n  return (\n    <div className=\"App\">\n        <header>Hello React</header>\n        <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus\n\n\n\n        }/>\n        <TodoList setTodos={setTodos} todos={todos} />\n\n    </div>\n\n  );\n}\n\nexport default App;\n","D:\\Project\\untitled\\src\\components\\Form.js",[],"D:\\Project\\untitled\\src\\components\\TodoList.js",[],"D:\\Project\\untitled\\src\\components\\Todo.js",["33"],"import React from 'react';\r\nimport TodoList from \"./TodoList\";\r\n const Todo = ({text,todo,todos,setTodos}) => {\r\n\r\n     const deleteHandler = () => {\r\n         setTodos(todos.filter((el)=> el.id !== todo.id));\r\n     };\r\n\r\n     const completeHandler = () => {\r\n         setTodos(todos.map((item) => {\r\n             if(item.id === todo.id){\r\n                 return{\r\n                     ...item, completed: !item.completed\r\n                 }\r\n             }\r\n             return item;\r\n         }))\r\n     }\r\n    return(\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : '' }`}>{text}</li>\r\n                <button onClick={completeHandler} className='complete-btn'>\r\n                    <i className='fas fa-check'></i>\r\n                </button>\r\n                <button onClick={deleteHandler} className='trash-btn'>\r\n                    <i className='fas fa-trash'></i>\r\n                </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":9,"column":12,"nodeType":"40","messageId":"41","endLine":9,"endColumn":18},{"ruleId":"38","severity":1,"message":"43","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":16},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Todo' is defined but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","'TodoList' is defined but never used.","no-global-assign","no-unsafe-negation"]